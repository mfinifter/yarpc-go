// Code generated by thriftrw-plugin-yarpc
// @generated

package fooserver

import (
	wire "go.uber.org/thriftrw/wire"
	transport "go.uber.org/yarpc/api/transport"
	thrift "go.uber.org/yarpc/encoding/thrift"
	nameserver "go.uber.org/yarpc/encoding/thrift/thriftrw-plugin-yarpc/internal/tests/extends/nameserver"
	yarpcerrors "go.uber.org/yarpc/yarpcerrors"
)

// Interface is the server-side interface for the Foo service.
type Interface interface {
	nameserver.Interface
}

// New prepares an implementation of the Foo service for
// registration.
//
// 	handler := FooHandler{}
// 	dispatcher.Register(fooserver.New(handler))
func New(impl Interface, opts ...thrift.RegisterOption) []transport.Procedure {

	service := thrift.Service{
		Name:    "Foo",
		Methods: []thrift.Method{},
	}

	procedures := make([]transport.Procedure, 0, 0)

	procedures = append(
		procedures,
		nameserver.New(
			impl,
			append(
				opts,
				thrift.Named("Foo"),
			)...,
		)...,
	)
	procedures = append(procedures, thrift.BuildProcedures(service, opts...)...)
	return procedures
}

type jsonifier struct{}

// JSONifier returns a thrift.JSONifier capable of producing JSON
// representations of requests and responses for the Foo service.
func JSONifier() thrift.JSONifier {
	return &jsonifier{}
}

// GetService gets the name of the service for which this JSONifier can produce
// JSON representations of requests and responses.
func (s *jsonifier) GetService() string {
	return "Foo"
}

// RequestToJSON returns a json representation of the request.
func (s *jsonifier) RequestToJSON(procedure string, requestBody wire.Value) ([]byte, error) {
	switch procedure {

	default:
		return nil, yarpcerrors.InvalidArgumentErrorf(
			"could not produce JSON representation of Thrift request for service 'Foo' procedure '%s'", procedure)
	}
}

// ResponseToJSON returns a json representation of the response.
func (s *jsonifier) ResponseToJSON(procedure string, responseBody wire.Value) ([]byte, error) {
	switch procedure {

	default:
		return nil, yarpcerrors.InvalidArgumentErrorf(
			"could not produce JSON representation of Thrift response for service 'Foo' procedure '%s'", procedure)
	}
}
